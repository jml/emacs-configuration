
(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(Buffer-menu-use-header-line nil)
 '(TeX-shell "bash" t)
 '(TeX-view-style (quote (("^a4\\(?:dutch\\|paper\\|wide\\)?\\|sem-a4$" "xdvi %d -paper a4") ("^a5\\(?:comb\\|paper\\)?$" "xdvi %d -paper a5") ("^b5paper$" "xdvi %d -paper b5") ("^letterpaper$" "xdvi %d -paper us") ("^legalpaper$" "xdvi %d -paper legal") ("^executivepaper$" "xdvi %d -paper 7.25x10.5in") ("^landscape$" "xdvi %d -paper a4r -s 4") ("." "xdvi %d -paper a4"))))
 '(auto-save-list-file-prefix "~/.emacs-auto-save-list/.saves-")
 '(backup-by-copying-when-linked t)
 '(bbdb-check-zip-codes-p nil)
 '(bbdb-default-country "UK")
 '(bbdb-north-american-phone-numbers-p nil)
 '(blink-cursor-mode nil)
 '(c-default-style "java")
 '(case-fold-search t)
 '(column-number-mode t)
 '(compilation-mode-hook (quote ((lambda nil (toggle-truncate-lines nil)))))
 '(compilation-scroll-output t)
 '(current-language-environment "English")
 '(custom-buffer-indent 4)
 '(dabbrev-case-distinction nil)
 '(dabbrev-case-fold-search nil)
 '(dabbrev-case-replace nil)
 '(dabbrev-upcase-means-case-search t)
 '(desktop-save-mode t)
 '(dvc-tips-enabled nil)
 '(ess-display-buffer-reuse-frames nil)
 '(ess-language "R")
 '(exec-path (quote ("/usr/bin" "/bin" "/usr/sbin" "/sbin" "/Applications/Emacs.app/Contents/MacOS/bin" "/usr/local/bin")))
 '(find-file-existing-other-name nil)
 '(flymake-log-level -1)
 '(global-font-lock-mode t nil (font-lock))
 '(grep-template "grep <C> -I -nH -e <R> <F>")
 '(gutter-buffers-tab-visible-p nil)
 '(haskell-program-name "ghci \"+.\"")
 '(highlight-beyond-fill-column-in-modes (quote ("python-mode")))
 '(indent-tabs-mode nil)
 '(initial-major-mode (quote text-mode))
 '(initial-scratch-message nil)
 '(kill-whole-line nil)
 '(line-number-mode t)
 '(mail-envelope-from (quote header))
 '(mail-specify-envelope-from t)
 '(menu-bar-mode nil nil (menu-bar))
 '(message-sendmail-envelope-from (quote header))
 '(notmuch-address-command "/home/jml/bin/google-contact")
 '(notmuch-fcc-dirs "[Gmail].Sent Mail")
 '(notmuch-search-oldest-first nil)
 '(org-agenda-custom-commands (quote (("n" "Agenda and all TODO's" ((agenda "") (alltodo))) ("w" "Waiting For" todo "WF") ("i" "In progress" todo "INPROGRESS"))))
 '(org-agenda-dim-blocked-tasks (quote invisible))
 '(org-agenda-files (quote ("~/Dropbox/Organize/ACTIONS")))
 '(org-completion-use-iswitchb t)
 '(org-enforce-todo-dependencies t)
 '(org-fontify-done-headline t)
 '(org-fontify-whole-heading-line t)
 '(org-hide-leading-stars t)
 '(org-link-abbrev-alist (quote (("lp" . "https://bugs.launchpad.net/bugs/") ("RT" . "https://rt.admin.canonical.com/Ticket/Display.html?id="))))
 '(org-link-frame-setup (quote ((vm . vm-visit-folder-other-frame) (gnus . org-gnus-no-new-news) (file . find-file) (wl . wl-other-frame))))
 '(org-modules (quote (org-bbdb org-bibtex org-docview org-gnus org-info org-jsinfo org-irc org-mew org-mhe org-rmail org-vm org-wl org-w3m)))
 '(org-startup-indented t)
 '(org-stuck-projects (quote ("/-DONE" ("TODO" "AGENDA") nil "")))
 '(org-todo-keywords (quote ((sequence "TODO" "INPROGRESS" "|" "WF" "DONE" "CANCELLED") (sequence))))
 '(org-use-fast-todo-selection t)
 '(org-wikinodes-scope (quote directory))
 '(package-archives (quote (("marmalade" . "http://marmalade-repo.org/packages/") ("gnu" . "http://elpa.gnu.org/packages/"))))
 '(paren-mode (quote paren) nil (paren))
 '(php-mode-speedbar-open nil)
 '(pop-up-windows nil)
 '(ps-default-bg "white")
 '(query-user-mail-address nil t)
 '(require-final-newline t)
 '(safe-local-variable-values (quote ((test-case-name . twisted\.trial\.test\.test_runner) (encoding . utf8) (encoding . utf-8))))
 '(scroll-bar-mode nil)
 '(scroll-conservatively 100000)
 '(scroll-down-aggressively nil)
 '(scroll-step 0)
 '(scroll-up-aggressively nil)
 '(scrollbars-visible-p nil)
 '(sendmail-program "/usr/bin/msmtp")
 '(sentence-end-double-space t)
 '(shell-file-name "/bin/bash")
 '(show-paren-mode t)
 '(show-paren-style (quote expression))
 '(show-trailing-whitespace t)
 '(split-height-threshold nil)
 '(split-width-threshold nil)
 '(sql-pop-to-buffer-after-send-region t)
 '(tab-width 4)
 '(tex-shell-file-name nil)
 '(text-mode-hook (quote (turn-on-auto-fill text-mode-hook-identify)))
 '(tool-bar-mode nil nil (tool-bar))
 '(toolbar-visible-p nil)
 '(track-eol t)
 '(transient-mark-mode t)
 '(truncate-lines t)
 '(uniquify-buffer-name-style (quote post-forward-angle-brackets) nil (uniquify))
 '(user-mail-address "jml@mumak.net")
 '(vc-handled-backends (quote (RCS CVS SVN SCCS Git Hg Arch)))
 '(vc-make-backup-files t)
 '(visible-bell t)
 '(which-function-mode t)
 '(wiki-follow-name-action (quote find-file))
 '(wiki-name-regexp "\\<[A-Z][a-z]+\\([A-Z][a-z]+\\)+\\>")
 '(x-select-enable-clipboard t))


(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:stipple nil :background "white" :foreground "black" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 120 :width normal :family "Ubuntu Mono"))))
 '(dired-directory ((t (:foreground "blue" :weight bold))))
 '(flymake-errline ((((class color) (background light)) (:underline "red"))))
 '(font-lock-builtin-face ((((class color) (min-colors 88) (background light)) (:foreground "darkred" :weight bold))))
 '(font-lock-comment-face ((((class color) (min-colors 88) (background light)) (:foreground "#007070" :slant italic))))
 '(font-lock-doc-face ((t (:inherit font-lock-comment-face))))
 '(font-lock-function-name-face ((((class color) (min-colors 88) (background light)) (:foreground "blue" :weight bold))))
 '(font-lock-keyword-face ((((class color) (min-colors 88) (background light)) (:weight bold))))
 '(font-lock-string-face ((((class color) (min-colors 88) (background light)) (:foreground "#007070"))))
 '(font-lock-type-face ((((class color) (min-colors 88) (background light)) (:foreground "red" :weight bold))))
 '(font-lock-variable-name-face ((((class color) (min-colors 88) (background light)) (:foreground "red"))))
 '(font-lock-warning-face ((((class color) (min-colors 88) (background light)) (:background "red"))))
 '(org-headline-done ((((class color) (min-colors 16) (background light)) (:foreground "ForestGreen" :strike-through t))))
 '(org-level-1 ((((class color) (background light)) (:weight bold :height 1.5))))
 '(org-level-2 ((((class color) (background light)) nil)))
 '(org-level-3 ((((class color) (background light)) nil)))
 '(py-builtins-face ((t (:inherit font-lock-builtin-face))))
 '(py-decorators-face ((t (:foreground "red" :weight bold))))
 '(py-pseudo-keyword-face ((t (:inherit font-lock-keyword-face)))))
